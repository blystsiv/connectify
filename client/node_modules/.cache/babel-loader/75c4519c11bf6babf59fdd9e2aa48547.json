{"ast":null,"code":"import { setDirectChatHistory } from \"../store/actions\";\nimport store from \"../store/store\";\nexport const appendNewMessageToChatHistory = data => {\n  const {\n    isAuthor,\n    receiverSocketId,\n    authorSocketId\n  } = data;\n  if (isAuthor) {\n    appendMessageToChatHistory(receiverSocketId, data);\n  } else {\n    appendMessageToChatHistory(authorSocketId, data);\n  }\n};\nconst appendMessageToChatHistory = (userSocketId, data) => {\n  const chatHistory = [...store.getState().directChatHistory];\n  const userChatHistory = chatHistory.find(h => h.socketId === userSocketId);\n  if (userChatHistory) {\n    const newDirectMessage = {\n      isAuthor: data.isAuthor,\n      messageContent: data.messageContent,\n      identity: data.identity\n    };\n    const newUserChatHistory = {\n      ...userChatHistory,\n      chatHistory: [...userChatHistory.chatHistory, newDirectMessage]\n    };\n    const newChatHistory = [...chatHistory.filter(h => h.socketId !== userSocketId), newUserChatHistory];\n    store.dispatch(setDirectChatHistory(newChatHistory));\n  } else {\n    const newUserChatHistory = {\n      socketId: userSocketId,\n      chatHistory: [{\n        isAuthor: data.isAuthor,\n        messageContent: data.messageContent,\n        identity: data.identity\n      }]\n    };\n    const newChatHistory = [...chatHistory, newUserChatHistory];\n    store.dispatch(setDirectChatHistory(newChatHistory));\n  }\n};","map":{"version":3,"names":["setDirectChatHistory","store","appendNewMessageToChatHistory","data","isAuthor","receiverSocketId","authorSocketId","appendMessageToChatHistory","userSocketId","chatHistory","getState","directChatHistory","userChatHistory","find","h","socketId","newDirectMessage","messageContent","identity","newUserChatHistory","newChatHistory","filter","dispatch"],"sources":["C:/Users/gstra/project/connectify/client/src/utils/directMessages.js"],"sourcesContent":["import { setDirectChatHistory } from \"../store/actions\";\r\nimport store from \"../store/store\";\r\n\r\nexport const appendNewMessageToChatHistory = (data) => {\r\n  const { isAuthor, receiverSocketId, authorSocketId } = data;\r\n\r\n  if (isAuthor) {\r\n    appendMessageToChatHistory(receiverSocketId, data);\r\n  } else {\r\n    appendMessageToChatHistory(authorSocketId, data);\r\n  }\r\n};\r\n\r\nconst appendMessageToChatHistory = (userSocketId, data) => {\r\n  const chatHistory = [...store.getState().directChatHistory];\r\n\r\n  const userChatHistory = chatHistory.find((h) => h.socketId === userSocketId);\r\n\r\n  if (userChatHistory) {\r\n    const newDirectMessage = {\r\n      isAuthor: data.isAuthor,\r\n      messageContent: data.messageContent,\r\n      identity: data.identity,\r\n    };\r\n\r\n    const newUserChatHistory = {\r\n      ...userChatHistory,\r\n      chatHistory: [...userChatHistory.chatHistory, newDirectMessage],\r\n    };\r\n\r\n    const newChatHistory = [\r\n      ...chatHistory.filter((h) => h.socketId !== userSocketId),\r\n      newUserChatHistory,\r\n    ];\r\n\r\n    store.dispatch(setDirectChatHistory(newChatHistory));\r\n  } else {\r\n    const newUserChatHistory = {\r\n      socketId: userSocketId,\r\n      chatHistory: [\r\n        {\r\n          isAuthor: data.isAuthor,\r\n          messageContent: data.messageContent,\r\n          identity: data.identity,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const newChatHistory = [...chatHistory, newUserChatHistory];\r\n\r\n    store.dispatch(setDirectChatHistory(newChatHistory));\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,kBAAkB;AACvD,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,6BAA6B,GAAIC,IAAI,IAAK;EACrD,MAAM;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC;EAAe,CAAC,GAAGH,IAAI;EAE3D,IAAIC,QAAQ,EAAE;IACZG,0BAA0B,CAACF,gBAAgB,EAAEF,IAAI,CAAC;EACpD,CAAC,MAAM;IACLI,0BAA0B,CAACD,cAAc,EAAEH,IAAI,CAAC;EAClD;AACF,CAAC;AAED,MAAMI,0BAA0B,GAAGA,CAACC,YAAY,EAAEL,IAAI,KAAK;EACzD,MAAMM,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,iBAAiB,CAAC;EAE3D,MAAMC,eAAe,GAAGH,WAAW,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,KAAKP,YAAY,CAAC;EAE5E,IAAII,eAAe,EAAE;IACnB,MAAMI,gBAAgB,GAAG;MACvBZ,QAAQ,EAAED,IAAI,CAACC,QAAQ;MACvBa,cAAc,EAAEd,IAAI,CAACc,cAAc;MACnCC,QAAQ,EAAEf,IAAI,CAACe;IACjB,CAAC;IAED,MAAMC,kBAAkB,GAAG;MACzB,GAAGP,eAAe;MAClBH,WAAW,EAAE,CAAC,GAAGG,eAAe,CAACH,WAAW,EAAEO,gBAAgB;IAChE,CAAC;IAED,MAAMI,cAAc,GAAG,CACrB,GAAGX,WAAW,CAACY,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACC,QAAQ,KAAKP,YAAY,CAAC,EACzDW,kBAAkB,CACnB;IAEDlB,KAAK,CAACqB,QAAQ,CAACtB,oBAAoB,CAACoB,cAAc,CAAC,CAAC;EACtD,CAAC,MAAM;IACL,MAAMD,kBAAkB,GAAG;MACzBJ,QAAQ,EAAEP,YAAY;MACtBC,WAAW,EAAE,CACX;QACEL,QAAQ,EAAED,IAAI,CAACC,QAAQ;QACvBa,cAAc,EAAEd,IAAI,CAACc,cAAc;QACnCC,QAAQ,EAAEf,IAAI,CAACe;MACjB,CAAC;IAEL,CAAC;IAED,MAAME,cAAc,GAAG,CAAC,GAAGX,WAAW,EAAEU,kBAAkB,CAAC;IAE3DlB,KAAK,CAACqB,QAAQ,CAACtB,oBAAoB,CAACoB,cAAc,CAAC,CAAC;EACtD;AACF,CAAC"},"metadata":{},"sourceType":"module"}