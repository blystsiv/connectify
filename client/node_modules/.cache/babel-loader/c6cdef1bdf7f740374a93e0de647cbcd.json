{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gstra\\\\project\\\\connectify\\\\client\\\\src\\\\RoomPage\\\\VideoSection\\\\SwitchToScreenSharingButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SwitchImg from \"../../resources/images/switchToScreenSharing.svg\";\nimport LocalScreenSharingPreview from \"./LocalScreenSharingPreview\";\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  audio: false,\n  video: true\n};\nconst SwitchToScreenSharingButton = () => {\n  _s();\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\"error occurred when trying to get an access to screen share stream\");\n      }\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\n        setIsScreenSharingActive(true);\n        // execute here function to switch the video track which we are sending to other users\n      }\n    } else {\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\n      setIsScreenSharingActive(false);\n\n      // stop screen share stream\n      screenSharingStream.getTracks().forEach(t => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_button_container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SwitchImg,\n        onClick: handleScreenShareToggle,\n        className: \"video_button_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isScreenSharingActive && /*#__PURE__*/_jsxDEV(LocalScreenSharingPreview, {\n      stream: screenSharingStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SwitchToScreenSharingButton, \"EDNK554F9kzm0rl1iVOi1mTRTYk=\");\n_c = SwitchToScreenSharingButton;\nexport default SwitchToScreenSharingButton;\nvar _c;\n$RefreshReg$(_c, \"SwitchToScreenSharingButton\");","map":{"version":3,"names":["React","useState","SwitchImg","LocalScreenSharingPreview","webRTCHandler","jsxDEV","_jsxDEV","Fragment","_Fragment","constraints","audio","video","SwitchToScreenSharingButton","_s","isScreenSharingActive","setIsScreenSharingActive","screenSharingStream","setScreenSharingStream","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","err","console","log","toggleScreenShare","getTracks","forEach","t","stop","children","className","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gstra/project/connectify/client/src/RoomPage/VideoSection/SwitchToScreenSharingButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SwitchImg from \"../../resources/images/switchToScreenSharing.svg\";\r\nimport LocalScreenSharingPreview from \"./LocalScreenSharingPreview\";\r\nimport * as webRTCHandler from \"../../utils/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst SwitchToScreenSharingButton = () => {\r\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\r\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\r\n\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occurred when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n\r\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\r\n        setIsScreenSharingActive(true);\r\n        // execute here function to switch the video track which we are sending to other users\r\n      }\r\n    } else {\r\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\r\n      setIsScreenSharingActive(false);\r\n\r\n      // stop screen share stream\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video_button_container\">\r\n        <img\r\n          src={SwitchImg}\r\n          onClick={handleScreenShareToggle}\r\n          className=\"video_button_image\"\r\n        />\r\n      </div>\r\n      {isScreenSharingActive && (\r\n        <LocalScreenSharingPreview stream={screenSharingStream} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwitchToScreenSharingButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAExC,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,OAAO,KAAKC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,2BAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACe,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpE,MAAMiB,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACJ,qBAAqB,EAAE;MAC1B,IAAIK,MAAM,GAAG,IAAI;MACjB,IAAI;QACFA,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,eAAe,CAACb,WAAW,CAAC;MACpE,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CACT,oEACF,CAAC;MACH;MACA,IAAIN,MAAM,EAAE;QACVF,sBAAsB,CAACE,MAAM,CAAC;QAE9Bf,aAAa,CAACsB,iBAAiB,CAACZ,qBAAqB,EAAEK,MAAM,CAAC;QAC9DJ,wBAAwB,CAAC,IAAI,CAAC;QAC9B;MACF;IACF,CAAC,MAAM;MACLX,aAAa,CAACsB,iBAAiB,CAACZ,qBAAqB,CAAC;MACtDC,wBAAwB,CAAC,KAAK,CAAC;;MAE/B;MACAC,mBAAmB,CAACW,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MACxDb,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MAAK0B,SAAS,EAAC,wBAAwB;MAAAD,QAAA,eACrCzB,OAAA;QACE2B,GAAG,EAAE/B,SAAU;QACfgC,OAAO,EAAEhB,uBAAwB;QACjCc,SAAS,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLxB,qBAAqB,iBACpBR,OAAA,CAACH,yBAAyB;MAACgB,MAAM,EAAEH;IAAoB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1D;EAAA,eACD,CAAC;AAEP,CAAC;AAACzB,EAAA,CA7CID,2BAA2B;AAAA2B,EAAA,GAA3B3B,2BAA2B;AA+CjC,eAAeA,2BAA2B;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}