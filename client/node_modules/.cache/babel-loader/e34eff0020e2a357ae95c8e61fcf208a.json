{"ast":null,"code":"import Actions from \"./actions\";\nconst initState = {\n  identity: \"\",\n  isRoomHost: false,\n  connectOnlyWithAudio: false,\n  roomId: null,\n  showOverlay: true,\n  participants: [],\n  messages: [],\n  activeConversation: null,\n  directChatHistory: [],\n  socketId: null\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Actions.SET_IS_ROOM_HOST:\n      return {\n        ...state,\n        isRoomHost: action.isRoomHost\n      };\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\n      return {\n        ...state,\n        connectOnlyWithAudio: action.onlyWithAudio\n      };\n    case Actions.SET_ROOM_ID:\n      return {\n        ...state,\n        roomId: action.roomId\n      };\n    case Actions.SET_IDENTITY:\n      return {\n        ...state,\n        identity: action.identity\n      };\n    case Actions.SET_SHOW_OVERLAY:\n      return {\n        ...state,\n        showOverlay: action.showOverlay\n      };\n    case Actions.SET_PARTICIPANTS:\n      return {\n        ...state,\n        participants: action.participants\n      };\n    case Actions.SET_MESSAGES:\n      return {\n        ...state,\n        messages: action.messages\n      };\n    case Actions.SET_ACTIVE_CONVERSATION:\n      return {\n        ...state,\n        activeConversation: action.activeConversation\n      };\n    case Actions.SET_DIRECT_CHAT_HISTORY:\n      return {\n        ...state,\n        directChatHistory: action.directChatHistory\n      };\n    case Actions.SET_SOCKET_ID:\n      return {\n        ...state,\n        socketId: action.socketId\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["Actions","initState","identity","isRoomHost","connectOnlyWithAudio","roomId","showOverlay","participants","messages","activeConversation","directChatHistory","socketId","reducer","state","arguments","length","undefined","action","type","SET_IS_ROOM_HOST","SET_CONNECT_ONLY_WITH_AUDIO","onlyWithAudio","SET_ROOM_ID","SET_IDENTITY","SET_SHOW_OVERLAY","SET_PARTICIPANTS","SET_MESSAGES","SET_ACTIVE_CONVERSATION","SET_DIRECT_CHAT_HISTORY","SET_SOCKET_ID"],"sources":["/Users/ostapblystsiv/Desktop/webRTC-advanced/my-app/src/store/reducer.js"],"sourcesContent":["import Actions from \"./actions\";\r\n\r\nconst initState = {\r\n  identity: \"\",\r\n  isRoomHost: false,\r\n  connectOnlyWithAudio: false,\r\n  roomId: null,\r\n  showOverlay: true,\r\n  participants: [],\r\n  messages: [],\r\n  activeConversation: null,\r\n  directChatHistory: [],\r\n  socketId: null\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case Actions.SET_IS_ROOM_HOST:\r\n      return {\r\n        ...state,\r\n        isRoomHost: action.isRoomHost,\r\n      };\r\n    case Actions.SET_CONNECT_ONLY_WITH_AUDIO:\r\n      return {\r\n        ...state,\r\n        connectOnlyWithAudio: action.onlyWithAudio,\r\n      };\r\n    case Actions.SET_ROOM_ID:\r\n      return {\r\n        ...state,\r\n        roomId: action.roomId,\r\n      };\r\n    case Actions.SET_IDENTITY:\r\n      return {\r\n        ...state,\r\n        identity: action.identity,\r\n      };\r\n    case Actions.SET_SHOW_OVERLAY:\r\n      return {\r\n        ...state,\r\n        showOverlay: action.showOverlay,\r\n      };\r\n    case Actions.SET_PARTICIPANTS:\r\n      return {\r\n        ...state,\r\n        participants: action.participants,\r\n      };\r\n    case Actions.SET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.messages,\r\n      };\r\n    case Actions.SET_ACTIVE_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        activeConversation: action.activeConversation\r\n      }\r\n    case Actions.SET_DIRECT_CHAT_HISTORY:\r\n      return {\r\n        ...state,\r\n        directChatHistory: action.directChatHistory\r\n      };\r\n    case Actions.SET_SOCKET_ID:\r\n      return {\r\n        ...state,\r\n        socketId: action.socketId\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,MAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,KAAK;EACjBC,oBAAoB,EAAE,KAAK;EAC3BC,MAAM,EAAE,IAAI;EACZC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,EAAE;EACZC,kBAAkB,EAAE,IAAI;EACxBC,iBAAiB,EAAE,EAAE;EACrBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGb,SAAS;EAAA,IAAEgB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKlB,OAAO,CAACmB,gBAAgB;MAC3B,OAAO;QACL,GAAGN,KAAK;QACRV,UAAU,EAAEc,MAAM,CAACd;MACrB,CAAC;IACH,KAAKH,OAAO,CAACoB,2BAA2B;MACtC,OAAO;QACL,GAAGP,KAAK;QACRT,oBAAoB,EAAEa,MAAM,CAACI;MAC/B,CAAC;IACH,KAAKrB,OAAO,CAACsB,WAAW;MACtB,OAAO;QACL,GAAGT,KAAK;QACRR,MAAM,EAAEY,MAAM,CAACZ;MACjB,CAAC;IACH,KAAKL,OAAO,CAACuB,YAAY;MACvB,OAAO;QACL,GAAGV,KAAK;QACRX,QAAQ,EAAEe,MAAM,CAACf;MACnB,CAAC;IACH,KAAKF,OAAO,CAACwB,gBAAgB;MAC3B,OAAO;QACL,GAAGX,KAAK;QACRP,WAAW,EAAEW,MAAM,CAACX;MACtB,CAAC;IACH,KAAKN,OAAO,CAACyB,gBAAgB;MAC3B,OAAO;QACL,GAAGZ,KAAK;QACRN,YAAY,EAAEU,MAAM,CAACV;MACvB,CAAC;IACH,KAAKP,OAAO,CAAC0B,YAAY;MACvB,OAAO;QACL,GAAGb,KAAK;QACRL,QAAQ,EAAES,MAAM,CAACT;MACnB,CAAC;IACH,KAAKR,OAAO,CAAC2B,uBAAuB;MAClC,OAAO;QACL,GAAGd,KAAK;QACRJ,kBAAkB,EAAEQ,MAAM,CAACR;MAC7B,CAAC;IACH,KAAKT,OAAO,CAAC4B,uBAAuB;MAClC,OAAO;QACL,GAAGf,KAAK;QACRH,iBAAiB,EAAEO,MAAM,CAACP;MAC5B,CAAC;IACH,KAAKV,OAAO,CAAC6B,aAAa;MACxB,OAAO;QACL,GAAGhB,KAAK;QACRF,QAAQ,EAAEM,MAAM,CAACN;MACnB,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}